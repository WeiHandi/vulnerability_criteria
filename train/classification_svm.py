# import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np
import scipy.io as sio
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.feature_selection import RFE
import joblib
import os

current_path = os.path.dirname(__file__)
m = sio.loadmat(
    current_path+"/trainging&test_data_normalized.mat")
data = m['Data_set_normalized']
predictor = data[0:-1:10, [11, 12, 14]]
response = data[0:-1:10, 15]

x_train, x_test, y_train, y_test = train_test_split(
    predictor, response, test_size=0.25)
model = SVC(C=10, kernel='rbf', gamma=0.7)
model.fit(x_train, y_train)
y_output = model.predict(x_test)

TP = sum(y_output[y_test == 1])
TN = sum(1-y_output[y_test == 0])
FP = sum(y_output[y_test == 0])
FN = sum(1-y_output[y_test == 1])
ACC = (TP+TN)/(TP+TN+FP+FN)
P = TP/(TP+FP)
R = TP/(TP+FN)
print('accuracy = %10.4f' % ACC)
print('precision = %10.4f' % P)
print('recall = %10.4f' % R)
joblib.dump(model, 'model/decision_function_rbf_kernel.m')
